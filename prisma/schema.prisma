generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id_usuario String     @id @default(uuid()) @db.Uuid
  nome       String     @db.VarChar(250)
  username   String     @db.VarChar(250)
  email      String     @unique @db.VarChar(250)
  senha      String
  auth_token String?    @map(" auth_token")
  Like       Like[]
  Reply      Reply[]
  Seguidor   Seguidor[]
  tweet      Tweet[]

  @@map("usuarios")
}

model Tweet {
  id_tweet   String    @id @default(uuid()) @db.Uuid
  conteudo   String
  type       TweetType @default(T)
  idUsuario  String    @map("id_usuario") @db.Uuid
  idTweetPai String?   @map("id_tweet_pai") @db.Uuid
  Like       Like[]
  Reply      Reply[]
  tweetPai   Tweet?    @relation("Reply", fields: [idTweetPai], references: [id_tweet])
  replies    Tweet[]   @relation("Reply")
  usuario    Usuario   @relation(fields: [idUsuario], references: [id_usuario])

  @@map("tweets")
}

model Like {
  id_like   String  @id @default(uuid()) @db.Uuid
  idUsuario String  @map("id_usuario") @db.Uuid
  idTweet   String  @map("id_tweet") @db.Uuid
  tweet     Tweet   @relation(fields: [idTweet], references: [id_tweet])
  usuario   Usuario @relation(fields: [idUsuario], references: [id_usuario])

  @@map("likes")
}

model Reply {
  id_reply  String    @id @default(uuid()) @db.Uuid
  idUsuario String    @map("id_usuario") @db.Uuid
  idTweet   String    @map("id_tweet") @db.Uuid
  conteudo  String
  type      TweetType @default(R)
  tweet     Tweet     @relation(fields: [idTweet], references: [id_tweet])
  usuario   Usuario   @relation(fields: [idUsuario], references: [id_usuario])

  @@map("replys")
}

model Seguidor {
  id_seguidor String  @id @default(uuid()) @db.Uuid
  idUsuario   String  @map("id_usuario") @db.Uuid
  usuario     Usuario @relation(fields: [idUsuario], references: [id_usuario])

  @@map("seguidores")
}

enum TweetType {
  T
  R
}
